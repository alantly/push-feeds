console.log('Started', self);

self.addEventListener('install', function(event) {
  self.skipWaiting();
  console.log('Installed', event);
});

self.addEventListener('activate', function(event) {
  console.log('Activated', event);
});

self.addEventListener('push', function(event) {
  console.log('Push message', event);
  event.waitUntil(
    self.registration.pushManager.getSubscription().then(function(subscription) {
      fetch("/notifications/recent?sub_id=" + formatEndpoint(subscription.endpoint), {
        credentials: 'same-origin',
        mode: 'same-origin'
      }).then(function(response) {
        if (!response.ok) {
          throw "Response from server not good.";
        }
        return response.json().then(function(data) {
          return showNotification(data.title, data.message, data.url);
        });
      }).catch(function(error) {
        console.log("There was an error", error);
        return showNotification("Push-Feeds","A wild notification has appeared!","https://www.google.com");
      });
    })
  );
});

function formatEndpoint(endpoint) {
  result = endpoint.split("/");
  return result[result.length - 1];
}

function showNotification(title, message, url) {
  return self.registration.showNotification(title, {
    body: message,
    icon: '<%= asset_path("whale.png") %>',
    data: url
  });
}

self.addEventListener('notificationclick', function(event) {
    console.log('Notification click');
    event.notification.close();
    var url = event.notification.data;
    event.waitUntil(
        clients.matchAll({
            type: 'window'
        })
        .then(function(windowClients) {
            for (var i = 0; i < windowClients.length; i++) {
                var client = windowClients[i];
                if (client.url === url && 'focus' in client) {
                    return client.focus();
                }
            }
            if (clients.openWindow) {
                return clients.openWindow(url);
            }
        })
    );
});
